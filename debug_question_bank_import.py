# DEBUG SCRIPT - debug_question_bank_import.py
# T·∫°o file n√†y ƒë·ªÉ ki·ªÉm tra l·ªói import c·ª• th·ªÉ

import sys
import traceback


def test_import_question_bank():
    """Test import QuestionBankWindowQt ƒë·ªÉ t√¨m l·ªói c·ª• th·ªÉ"""

    print("üîç ƒêang ki·ªÉm tra import QuestionBankWindowQt...")

    try:
        print("1. Ki·ªÉm tra import PySide6...")
        from PySide6 import QtCore, QtGui, QtWidgets
        print("‚úÖ PySide6 OK")

        print("2. Ki·ªÉm tra import typing...")
        from typing import List, Dict
        print("‚úÖ typing OK")

        print("3. Ki·ªÉm tra import json, os, re...")
        import json, os, re
        print("‚úÖ json, os, re OK")

        print("4. Ki·ªÉm tra import datetime...")
        from datetime import datetime
        print("‚úÖ datetime OK")

        print("5. Ki·ªÉm tra import docx...")
        try:
            from docx.oxml.text.paragraph import CT_P
            from docx.oxml.table import CT_Tbl
            print("‚úÖ docx OK")
        except ImportError as e:
            print(f"‚ö†Ô∏è docx import warning: {e}")
            print("   (C√≥ th·ªÉ b·ªè qua n·∫øu ch∆∞a c√†i python-docx)")

        print("6. Ki·ªÉm tra import QtWidgets components...")
        from PySide6.QtWidgets import QMenu
        from PySide6.QtGui import QKeySequence, QShortcut
        print("‚úÖ QMenu, QKeySequence, QShortcut OK")

        print("7. Th·ª≠ import module question_bank_window_qt...")
        import ui_qt.windows.question_bank_window_qt as qb_module
        print("‚úÖ Module import OK")

        print("8. Th·ª≠ l·∫•y class QuestionBankWindowQt...")
        QuestionBankWindowQt = getattr(qb_module, 'QuestionBankWindowQt')
        print("‚úÖ Class QuestionBankWindowQt OK")

        print("9. Ki·ªÉm tra class c√≥ callable kh√¥ng...")
        if callable(QuestionBankWindowQt):
            print("‚úÖ Class c√≥ th·ªÉ kh·ªüi t·∫°o ƒë∆∞·ª£c")
        else:
            print("‚ùå Class kh√¥ng th·ªÉ kh·ªüi t·∫°o")

        print("\nüéâ T·∫§T C·∫¢ IMPORT TH√ÄNH C√îNG!")
        print("‚úÖ QuestionBankWindowQt s·∫µn s√†ng s·ª≠ d·ª•ng")

        return True

    except Exception as e:
        print(f"\n‚ùå L·ªñI IMPORT: {e}")
        print(f"üìù Chi ti·∫øt l·ªói:")
        traceback.print_exc()

        print(f"\nüí° G·ª¢I √ù S·ª¨A L·ªñI:")

        if "No module named" in str(e):
            print("- Ki·ªÉm tra ƒë∆∞·ªùng d·∫´n file")
            print("- ƒê·∫£m b·∫£o c√≥ __init__.py trong th∆∞ m·ª•c")

        elif "QShortcut" in str(e):
            print("- S·ª≠a import QShortcut t·ª´ QtGui thay v√¨ QtWidgets")

        elif "cannot import name" in str(e):
            print("- Ki·ªÉm tra t√™n class trong file")
            print("- Ki·ªÉm tra syntax error trong file")

        elif "syntax" in str(e).lower():
            print("- Ki·ªÉm tra syntax error trong question_bank_window_qt.py")
            print("- Ki·ªÉm tra indent, d·∫•u ngo·∫∑c, d·∫•u ph·∫©y...")

        else:
            print("- Ki·ªÉm tra dependencies")
            print("- Ki·ªÉm tra version PySide6")

        return False


def check_file_structure():
    """Ki·ªÉm tra c·∫•u tr√∫c file"""
    print("\nüìÅ KI·ªÇM TRA C·∫§U TR√öC FILE:")

    files_to_check = [
        "ui_qt/__init__.py",
        "ui_qt/windows/__init__.py",
        "ui_qt/windows/question_bank_window_qt.py",
        "ui_qt/windows/#dashboard_window_qt.py"
    ]

    for file_path in files_to_check:
        if os.path.exists(file_path):
            print(f"‚úÖ {file_path}")
        else:
            print(f"‚ùå {file_path} - THI·∫æU FILE")


def check_python_path():
    """Ki·ªÉm tra Python path"""
    print(f"\nüêç PYTHON PATH:")
    for path in sys.path:
        print(f"  - {path}")


if __name__ == "__main__":
    print("=" * 60)
    print("üîß DEBUG QUESTIONBANKWINDOWQT IMPORT")
    print("=" * 60)

    # Th√™m current directory v√†o path
    import os

    current_dir = os.path.dirname(os.path.abspath(__file__))
    if current_dir not in sys.path:
        sys.path.insert(0, current_dir)

    check_python_path()
    check_file_structure()

    success = test_import_question_bank()

    print("\n" + "=" * 60)
    if success:
        print("üéâ K·∫æT LU·∫¨N: QuestionBankWindowQt c√≥ th·ªÉ import ƒë∆∞·ª£c!")
        print("   L·ªói c√≥ th·ªÉ n·∫±m ·ªü ch·ªó kh√°c trong #dashboard_window_qt.py")
    else:
        print("‚ùå K·∫æT LU·∫¨N: C√≥ l·ªói import c·∫ßn s·ª≠a")
        print("   H√£y s·ª≠a c√°c l·ªói tr√™n tr∆∞·ªõc khi ch·∫°y l·∫°i ·ª©ng d·ª•ng")
    print("=" * 60)