# dialogs/latex_input_dialog.py
from PySide6 import QtWidgets, QtCore, QtGui
from PySide6.QtCore import Qt
from PySide6.QtGui import QFont, QSyntaxHighlighter, QTextCharFormat, QColor


class LaTeXSyntaxHighlighter(QSyntaxHighlighter):
    """Syntax highlighter cho LaTeX"""

    def __init__(self, parent=None):
        super().__init__(parent)
        self.highlighting_rules = []

        # LaTeX commands
        command_format = QTextCharFormat()
        command_format.setForeground(QColor("#0066CC"))
        command_format.setFontWeight(QFont.Bold)
        self.highlighting_rules.append((r'\\[a-zA-Z]+', command_format))

        # Math delimiters
        math_format = QTextCharFormat()
        math_format.setForeground(QColor("#CC6600"))
        self.highlighting_rules.append((r'\$.*?\$', math_format))

        # Braces
        brace_format = QTextCharFormat()
        brace_format.setForeground(QColor("#666666"))
        self.highlighting_rules.append((r'[{}]', brace_format))

        # Comments
        comment_format = QTextCharFormat()
        comment_format.setForeground(QColor("#999999"))
        comment_format.setFontItalic(True)
        self.highlighting_rules.append((r'%.*$', comment_format))

    def highlightBlock(self, text):
        """Highlight m·ªôt block text"""
        import re
        for pattern, format_obj in self.highlighting_rules:
            for match in re.finditer(pattern, text):
                start = match.start()
                length = match.end() - start
                self.setFormat(start, length, format_obj)


class LaTeXInputDialog(QtWidgets.QDialog):
    """Dialog nh·∫≠p c√¥ng th·ª©c LaTeX"""

    def __init__(self, parent=None):
        super().__init__(parent)
        self.latex_code = ""
        self._setup_ui()
        self._load_templates()

    def _setup_ui(self):
        """Thi·∫øt l·∫≠p giao di·ªán"""
        self.setWindowTitle("‚àë Nh·∫≠p c√¥ng th·ª©c LaTeX")
        self.setModal(True)
        self.resize(600, 500)

        layout = QtWidgets.QVBoxLayout(self)

        # #(Toolbar v·ªõi c√°c template th∆∞·ªùng d√πng)
        toolbar = QtWidgets.QToolBar()
        toolbar.addAction("‚àë", lambda: self.insert_template("\\sum_{i=1}^{n}"))
        toolbar.addAction("‚à´", lambda: self.insert_template("\\int_{a}^{b}"))
        toolbar.addAction("‚àö", lambda: self.insert_template("\\sqrt{}"))
        toolbar.addAction("^", lambda: self.insert_template("x^{}")
        toolbar.addAction("_", lambda: self.insert_template("x_{}")
        toolbar.addAction("√∑", lambda: self.insert_template("\\frac{}{}")
        toolbar.addAction("‚âà", lambda: self.insert_template("\\approx"))
        toolbar.addAction("‚â†", lambda: self.insert_template("\\neq"))
        toolbar.addAction("‚â§", lambda: self.insert_template("\\leq"))
        toolbar.addAction("‚â•", lambda: self.insert_template("\\geq"))
        toolbar.addAction("‚àû", lambda: self.insert_template("\\infty"))
        toolbar.addAction("Œ±", lambda: self.insert_template("\\alpha"))
        toolbar.addAction("Œ≤", lambda: self.insert_template("\\beta"))
        toolbar.addAction("œÄ", lambda: self.insert_template("\\pi"))
        layout.addWidget(toolbar)

        # #(Template dropdown)
        template_layout = QtWidgets.QHBoxLayout()
        template_layout.addWidget(QtWidgets.QLabel("M·∫´u:"))

        self.template_combo = QtWidgets.QComboBox()
        self.template_combo.currentTextChanged.connect(self.load_template)
        template_layout.addWidget(self.template_combo)

        clear_btn = QtWidgets.QPushButton("üóëÔ∏è X√≥a")
        clear_btn.clicked.connect(self.clear_latex)
        template_layout.addWidget(clear_btn)

        template_layout.addStretch()
        layout.addLayout(template_layout)

        # #(LaTeX input area v·ªõi syntax highlighting)
        input_group = QtWidgets.QGroupBox("üìù Nh·∫≠p c√¥ng th·ª©c LaTeX:")
        input_layout = QtWidgets.QVBoxLayout(input_group)

        self.latex_input = QtWidgets.QTextEdit()
        self.latex_input.setFont(QFont("Consolas, Monaco, monospace", 11))
        self.latex_input.setPlaceholderText("Nh·∫≠p c√¥ng th·ª©c LaTeX ·ªü ƒë√¢y...\nV√≠ d·ª•: x^2 + y^2 = z^2")

        # Syntax highlighting
        self.highlighter = LaTeXSyntaxHighlighter(self.latex_input.document())

        input_layout.addWidget(self.latex_input)
        layout.addWidget(input_group)

        # #(Preview area)
        preview_group = QtWidgets.QGroupBox("üëÅÔ∏è Xem tr∆∞·ªõc:")
        preview_layout = QtWidgets.QVBoxLayout(preview_group)

        self.preview_label = QtWidgets.QLabel("(Ch∆∞a c√≥ c√¥ng th·ª©c ƒë·ªÉ preview)")
        self.preview_label.setAlignment(Qt.AlignCenter)
        self.preview_label.setStyleSheet("""
            QLabel {
                border: 2px dashed #ccc;
                padding: 20px;
                background-color: #f9f9f9;
                min-height: 80px;
            }
        """)
        preview_layout.addWidget(self.preview_label)

        # Preview button
        preview_btn = QtWidgets.QPushButton("üîÑ C·∫≠p nh·∫≠t preview")
        preview_btn.clicked.connect(self.update_preview)
        preview_layout.addWidget(preview_btn)

        layout.addWidget(preview_group)

        # #(Buttons)
        button_layout = QtWidgets.QHBoxLayout()

        help_btn = QtWidgets.QPushButton("‚ùì Tr·ª£ gi√∫p")
        help_btn.clicked.connect(self.show_help)
        button_layout.addWidget(help_btn)

        button_layout.addStretch()

        cancel_btn = QtWidgets.QPushButton("‚ùå H·ªßy")
        cancel_btn.clicked.connect(self.reject)
        button_layout.addWidget(cancel_btn)

        ok_btn = QtWidgets.QPushButton("‚úÖ OK")
        ok_btn.setDefault(True)
        ok_btn.clicked.connect(self.accept)
        button_layout.addWidget(ok_btn)

        layout.addLayout(button_layout)

    def _load_templates(self):
        """Load c√°c template LaTeX th∆∞·ªùng d√πng"""
        templates = {
            "-- Ch·ªçn m·∫´u --": "",
            "Ph√¢n s·ªë": "\\frac{a}{b}",
            "CƒÉn b·∫≠c hai": "\\sqrt{x}",
            "CƒÉn b·∫≠c n": "\\sqrt[n]{x}",
            "L≈©y th·ª´a": "x^{n}",
            "Ch·ªâ s·ªë d∆∞·ªõi": "x_{i}",
            "T·ªïng": "\\sum_{i=1}^{n} a_i",
            "T√≠ch ph√¢n": "\\int_{a}^{b} f(x) dx",
            "Gi·ªõi h·∫°n": "\\lim_{x \\to \\infty} f(x)",
            "Ma tr·∫≠n 2x2": "\\begin{pmatrix} a & b \\\\ c & d \\end{pmatrix}",
            "H·ªá ph∆∞∆°ng tr√¨nh": "\\begin{cases} x + y = 1 \\\\ x - y = 0 \\end{cases}",
            "Ph∆∞∆°ng tr√¨nh b·∫≠c 2": "ax^2 + bx + c = 0",
            "C√¥ng th·ª©c nghi·ªám": "x = \\frac{-b \\pm \\sqrt{b^2-4ac}}{2a}",
            "ƒê·ªãnh l√Ω Pythagoras": "a^2 + b^2 = c^2",
            "C√¥ng th·ª©c di·ªán t√≠ch": "S = \\pi r^2"
        }

        for name, code in templates.items():
            self.template_combo.addItem(name, code)

    def insert_template(self, template):
        """Ch√®n template v√†o v·ªã tr√≠ cursor"""
        cursor = self.latex_input.textCursor()
        cursor.insertText(template)
        self.latex_input.setFocus()

    def load_template(self, template_name):
        """Load template ƒë∆∞·ª£c ch·ªçn"""
        if template_name and template_name != "-- Ch·ªçn m·∫´u --":
            template_code = self.template_combo.currentData()
            if template_code:
                self.latex_input.setPlainText(template_code)
                self.update_preview()

    def clear_latex(self):
        """X√≥a n·ªôi dung LaTeX"""
        self.latex_input.clear()
        self.preview_label.setText("(Ch∆∞a c√≥ c√¥ng th·ª©c ƒë·ªÉ preview)")
        self.template_combo.setCurrentIndex(0)

    def update_preview(self):
        """C·∫≠p nh·∫≠t preview (placeholder - c·∫ßn MathJax ho·∫∑c th∆∞ vi·ªán render)"""
        latex_code = self.latex_input.toPlainText().strip()
        if latex_code:
            # Placeholder preview - trong th·ª±c t·∫ø s·∫Ω render LaTeX
            self.preview_label.setText(f"LaTeX Preview:\n{latex_code}")
            self.preview_label.setStyleSheet("""
                QLabel {
                    border: 2px solid #4CAF50;
                    padding: 20px;
                    background-color: #f0f8f0;
                    min-height: 80px;
                    font-family: monospace;
                }
            """)
        else:
            self.preview_label.setText("(Ch∆∞a c√≥ c√¥ng th·ª©c ƒë·ªÉ preview)")
            self.preview_label.setStyleSheet("""
                QLabel {
                    border: 2px dashed #ccc;
                    padding: 20px;
                    background-color: #f9f9f9;
                    min-height: 80px;
                }
            """)

    def show_help(self):
        """Hi·ªÉn th·ªã tr·ª£ gi√∫p LaTeX"""
        help_text = """
        <h3>üî§ H∆∞·ªõng d·∫´n LaTeX c∆° b·∫£n:</h3>
        <table>
        <tr><td><b>C√∫ ph√°p</b></td><td><b>K·∫øt qu·∫£</b></td><td><b>M√¥ t·∫£</b></td></tr>
        <tr><td>x^2</td><td>x¬≤</td><td>L≈©y th·ª´a</td></tr>
        <tr><td>x_i</td><td>x·µ¢</td><td>Ch·ªâ s·ªë d∆∞·ªõi</td></tr>
        <tr><td>\\frac{a}{b}</td><td>a/b</td><td>Ph√¢n s·ªë</td></tr>
        <tr><td>\\sqrt{x}</td><td>‚àöx</td><td>CƒÉn b·∫≠c hai</td></tr>
        <tr><td>\\sqrt[n]{x}</td><td>‚Åø‚àöx</td><td>CƒÉn b·∫≠c n</td></tr>
        <tr><td>\\sum_{i=1}^{n}</td><td>‚àë</td><td>T·ªïng</td></tr>
        <tr><td>\\int_{a}^{b}</td><td>‚à´</td><td>T√≠ch ph√¢n</td></tr>
        <tr><td>\\alpha, \\beta, \\pi</td><td>Œ±, Œ≤, œÄ</td><td>Ch·ªØ c√°i Hy L·∫°p</td></tr>
        <tr><td>\\leq, \\geq, \\neq</td><td>‚â§, ‚â•, ‚â†</td><td>So s√°nh</td></tr>
        </table>

        <p><b>M·∫πo:</b> S·ª≠ d·ª•ng {} ƒë·ªÉ nh√≥m c√°c k√Ω t·ª± l·∫°i v·ªõi nhau.</p>
        """

        QtWidgets.QMessageBox.information(self, "LaTeX Help", help_text)

    def get_latex(self):
        """L·∫•y m√£ LaTeX ƒë√£ nh·∫≠p"""
        return self.latex_input.toPlainText().strip()

    def accept(self):
        """X·ª≠ l√Ω khi nh·∫•n OK"""
        self.latex_code = self.get_latex()
        if not self.latex_code:
            QtWidgets.QMessageBox.warning(self, "C·∫£nh b√°o", "Vui l√≤ng nh·∫≠p c√¥ng th·ª©c LaTeX!")
            return
        super().accept()