# dialogs/question_detail_dialog.py
from PySide6 import QtWidgets, QtCore, QtGui
class QuestionDetailDialog(QtWidgets.QDialog):
    """Dialog hi·ªÉn th·ªã chi ti·∫øt ƒë·∫ßy ƒë·ªß c·ªßa c√¢u h·ªèi"""

    def __init__(self, db_manager, question_id, parent=None):
        super().__init__(parent)
        self.db = db_manager
        self.question_id = question_id

        self.setWindowTitle(f"Chi ti·∫øt c√¢u h·ªèi #{question_id}")
        self.setModal(True)
        self.resize(800, 600)

        self._setup_ui()
        self._load_question_data()

    def _setup_ui(self):
        """Thi·∫øt l·∫≠p giao di·ªán dialog"""
        layout = QtWidgets.QVBoxLayout(self)

        # Scroll area ƒë·ªÉ ch·ª©a n·ªôi dung
        scroll = QtWidgets.QScrollArea()
        scroll.setWidgetResizable(True)

        content_widget = QtWidgets.QWidget()
        content_layout = QtWidgets.QVBoxLayout(content_widget)

        # Th√¥ng tin c∆° b·∫£n
        info_group = QtWidgets.QGroupBox("üìã Th√¥ng tin c∆° b·∫£n")
        info_layout = QtWidgets.QFormLayout(info_group)

        self.id_label = QtWidgets.QLabel()
        self.difficulty_label = QtWidgets.QLabel()
        self.created_label = QtWidgets.QLabel()

        info_layout.addRow("üÜî ID:", self.id_label)
        info_layout.addRow("üéØ ƒê·ªô kh√≥:", self.difficulty_label)
        info_layout.addRow("üìÖ Ng√†y t·∫°o:", self.created_label)

        content_layout.addWidget(info_group)

        # N·ªôi dung c√¢u h·ªèi
        content_group = QtWidgets.QGroupBox("üìù N·ªôi dung c√¢u h·ªèi")
        content_content_layout = QtWidgets.QVBoxLayout(content_group)

        self.content_display = QtWidgets.QTextEdit()
        self.content_display.setReadOnly(True)
        self.content_display.setMaximumHeight(300)
        content_content_layout.addWidget(self.content_display)

        content_layout.addWidget(content_group)

        # ƒê√°p √°n
        answer_group = QtWidgets.QGroupBox("‚úÖ ƒê√°p √°n")
        answer_layout = QtWidgets.QVBoxLayout(answer_group)

        self.answer_display = QtWidgets.QTextEdit()
        self.answer_display.setReadOnly(True)
        self.answer_display.setMaximumHeight(150)
        answer_layout.addWidget(self.answer_display)

        content_layout.addWidget(answer_group)

        scroll.setWidget(content_widget)
        layout.addWidget(scroll)

        # Buttons
        button_layout = QtWidgets.QHBoxLayout()
        close_btn = QtWidgets.QPushButton("ƒê√≥ng")
        close_btn.clicked.connect(self.accept)
        button_layout.addStretch()
        button_layout.addWidget(close_btn)
        layout.addLayout(button_layout)

    def _load_question_data(self):
        """Load d·ªØ li·ªáu c√¢u h·ªèi chi ti·∫øt"""
        try:
            question = self.db.execute_query(
                "SELECT * FROM question_bank WHERE id=?",
                (self.question_id,), fetch="one"
            )

            if question:
                # Convert to dict n·∫øu c·∫ßn
                if hasattr(question, 'keys'):
                    q_dict = dict(question)
                else:
                    q_dict = question

                # Hi·ªÉn th·ªã th√¥ng tin
                self.id_label.setText(str(q_dict.get('id', '')))
                self.difficulty_label.setText(q_dict.get('difficulty_level', 'Medium'))
                self.created_label.setText(q_dict.get('created_date', 'Kh√¥ng r√µ'))

                # Hi·ªÉn th·ªã n·ªôi dung
                content_text = q_dict.get('content_text', '')
                self.content_display.setText(content_text)

                # Hi·ªÉn th·ªã ƒë√°p √°n
                answer_text = q_dict.get('answer_text', '')
                self.answer_display.setText(answer_text)

        except Exception as e:
            QtWidgets.QMessageBox.critical(self, "L·ªói", f"Kh√¥ng th·ªÉ load d·ªØ li·ªáu: {e}")
